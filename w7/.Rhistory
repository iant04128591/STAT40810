x <- scan()
x
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
plot(fit)
x <- scan()
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
rm(list=ls())
rm(list=ls())
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
# Read in Failure Times
rm(list=ls())
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
fit
fit$std.err
fit$upper
rm(list=ls())
# Read in Failure Times
x <- scan()
#Fit Kaplan-Meier Curve
# Also compute standard errors
library(survival)
fit <- survfit(Surv(x)~1,se=TRUE)
# Plot the Kaplan-Meier Curve with standard errors
plot(fit)
library(survival)
#Load leukemia data
data(leukemia)
#Fit the model to the data
fit <- survfit(Surv(time,status)~x,data=leukemia,se=TRUE)
summary(fit)
# Plot the estimated survival curves
plot(fit,conf.int=FALSE,col=1:2)
# Plot with standard errors
plot(fit,conf.int=TRUE,col=1:2)
library(survival)
data(leukemia)
fit <- survfit(Surv(time,status)~x,data=leukemia,se=TRUE)
summary(fit)
plot(fit,conf.int=FALSE,col=1:2)
plot(fit,conf.int=TRUE,col=1:2)
leukemia
#Load survival package
library(survival)
#Load leukemia data
data(leukemia)
#Fit the Cox PH model to the data
fit <- coxph(Surv(time,status)~x,data=leukemia)
summary(fit)
leukemia
#Load survival package
library(survival)
#Load the GBSG2 data
library(TH.data)
data("GBSG2")
GBSG2
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
#Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
summary(fit)
TH.data
library(survival)
library(TH.data)
install.packages('TH.data')
library(TH.data)
library(survival)
install.packages('TH.data')
library(TH.data)
data("GBSG2")
GBSG2
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
#Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
summary(fit)
install.packages("TH.data")
install.packages('TH.data')
library(TH.data)
data("GBSG2")
GBSG2
# Change tumor grade to unordered for interpretation
GBSG2$tgrade <- factor(GBSG2$tgrade,ordered=FALSE)
#Fit a Cox proportional hazards model
fit <- coxph(formula = Surv(time, cens) ~ ., data = GBSG2)
# Examine the fit
print(fit)
summary(fit)
GBSG2
