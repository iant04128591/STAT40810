?ggplot
x <- c(14, 13, 13, 14, 14, 12, 12, 15, 13, 12, 11, 14, 12, 15, 16, 12, 15, 11, 15)
y <- c(69, 56.5, 65.3, 62.8, 63.5, 57.3, 59.8, 62.5, 62.5, 59.0, 51.3, 64.3, 56.3, 66.5, 72.0, 64.8, 67.0, 57.5, 66.5)
df <- data.frame(x,y)
ggplot(df)
?ggplot
ggplot(df) + geom_point()
ggplot(df) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
ggplot(data=df, aes=(x,y)) + geom_point()
?ggplot
ggplot(data=df, aes(x,y)) + geom_point()
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth()
lm(y~x)
model <- lm(y~x)
model
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth(method='lm',formula=df$y~df$x)
df$y
df$x
df
ggplot(data=df, aes(x,y)) + geom_point() + +stat_summary(fun.data=mean_cl_normal) + geom_smooth(method='lm',formula=df$y~df$x)
ggplot(data=df, aes(x,y)) + stat_summary(fun.data=mean_cl_normal) + geom_smooth(method='lm',formula=df$y~df$x)
ggplot(data=df, aes(x,y)) + geom_point() + stat_summary(fun.data=mean_cl_normal) + geom_smooth(method='lm',formula=df$y~df$x)
model <- lm(y~x)
model
summary(df)
summary(model)
ggplot(data=df, aes(x,y)) + geom_point() + stat_summary(fun.data=mean_cl_normal) + geom_smooth(method='lm',formula=df$y~df$x)
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth(method='lm',formula=df$y~df$x)
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth(method='lm')
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth(method='lm')
model <- lm(y~x)
summary(model)
?predict
predict(model)
predict(model, interval="confidence")
model.predict <- predict(model, interval="confidence")
model.predict
plot(model.predict)
plot(model.predict$fit)
model.predict
str(model.predict)
model.predict[1,]
model.predict[,1]
plot(model.predict[,1])
plot(model.predict[,2])
plot(model.predict[,3])
x
y
ggplot(data=df, aes(x,y)) + geom_point() + geom_smooth(method='lm')
model.predict
newx <- seq(min(df$x), max(df$x), length.out=100)
preds <- predict(model, newdata = data.frame(x=newx), interval = 'confidence')
preds
plot(x,y)
abline(model)
preds
lines(newx, preds[ ,3], lty = 'dashed', col = 'red')
lines(newx, preds[ ,2], lty = 'dashed', col = 'red')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = 'grey80', border = NA)
plot(x,y)
#model
abline(model)
lines(newx, preds[ ,3], lty = 'dashed', col = 'red')
#lower
lines(newx, preds[ ,2], lty = 'dashed', col = 'red')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = 'grey80', border = NA, alpha = 0.25)
?polygon
plot(x,y)
#model
abline(model)
#upper
lines(newx, preds[ ,3], lty = 'dashed', col = 'red')
#lower
lines(newx, preds[ ,2], lty = 'dashed', col = 'red')
polygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), col = rgb(1,0,0,0.25), border = NA)
install.packages('asaur')
library('asaur')
gastricXelox
head(gastricXelox)
library(emplik)
library(survival)
data(myeloma)
colnames(myeloma) <- c("time","vstatus","logBUN","HGB","platelet","age","logWBC","FRAC","logPBM","protein","SCALC")
myeloma <- as.data.frame(myeloma)
myeloma
head(myeloma)
fit <- coxph(Surv(time,vstatus)~platelet+age+platelets:age, data=myeloma)
fit <- coxph(Surv(time,vstatus)~platelet+age+platelet:age, data=myeloma)
summary(fit)
plot(fit)
myeloma
head(myeloma)
str(myeloma)
fit
summary(fit)
head(myeloma)
myeloma
?myeloma
fit <- coxph(Surv(time,vstatus)~platelet+age+platelet:age, data=myeloma)
summary(fit)
plot(fit)
fit <- coxph(Surv(time,vstatus)~platelet, data=myeloma)
summary(fit)
plot(fit)
summary(fit)
fit <- coxph(Surv(time,vstatus)~platelet+age+platelet:age, data=myeloma)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ ., data=myeloma)
summary(fit)
plot(fit)
print(fit)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN, data=myeloma)
print(fit)
summary(fit)
plot(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN+platelet, data=myeloma)
print(fit)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN:platelet, data=myeloma)
print(fit)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ platelet, data=myeloma)
print(fit)
fit <- coxph(Surv(time,vstatus) ~ ., data=myeloma)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ ., data=myeloma)
summary(fit)
print(fit)
head(myeloma)
plot(survfit(fit))
plot(survfit(fit), lty=c(1,3), ylab = "Survivorship", xlab = "Day", bty="L")
plot(survfit(fit), lty=c(1,3), ylab = "Survivorship", xlab = "Day", bty="L")
plot(survfit(fit), lty=c(1,3), ylab = "Survival Probability", xlab = "Months", bty="L")
plot(survfit(fit), lty=c(1,3), ylab = "Survival Probability", xlab = "Months", bty="l")
summary(fit)
print(fit)
fit <- coxph(Surv(time,vstatus) ~ ., data=myeloma)
plot(survfit(fit), lty=c(1,3), ylab = "Survival Probability", xlab = "Months", bty="L")
legend(70,0.9,c("Mated","Virgin"), lty=c(1,3), bty = "n")
survfit(fit)
plot(survfit(fit), lty=c(1,3), ylab = "Survival Probability", xlab = "Months", bty="L")
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(1,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(1,1,1), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
plot(survfit(fit), lty=c(1,1,1), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(2,1,2), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(3,1,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Upper","Lower"), lty=c(1,3), bty = "n")
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediation","Upper","Lower"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediation","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
predict(fit,10)
predict(fit,data.frame(10))
data.frame(10)
data.frame(x=10)
predict(fit,data.frame(x=10))
myeloma
myeloma[,1]
myeloma[1,]
data.frame(myeloma[1,])
predict(fit,data.frame(myeloma[1,]))
predict(fit,data.frame(myeloma[2,]))
data.frame(myeloma[2,]
)
myeloma
predict(fit,data.frame(myeloma[65,]))
predict(fit,data.frame(myeloma))
?myeloma
fit <- coxph(Surv(time,vstatus) ~ platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediation","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + logBUN:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ platelet + HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet:logBUN, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet + age:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ age:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logWBC:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ FRAC:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logPBM:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ protein:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ protein:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ SCALC:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ platelet + HGB + HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB + HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ platelet + HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
ggsurvplot(fit, risk.table = TRUE)
library(survminer)
install.packages('survminer')
library(survminer)
ggsurvplot(fit, risk.table = TRUE)
ggsurvplot(survfit(fit), risk.table = TRUE)
str(myeloma)
head(myeloma)
predict(fit,data.frame(myeloma))
ggsurvplot(survfit(fit), risk.table = TRUE)
head(myeloma)
install.packages('survMisc')
library(survMisc)
survMisc:::autoplot.survfit(fit)
survMisc:::autoplot.survfit(fit)
survMisc:::autoplot.survfit(survfit(fit))
survMisc:::autoplot.survfit(fit)
fit <- coxph(Surv(time,vstatus) ~ HGB:platelet, data=myeloma)
survMisc:::autoplot.survfit(fit)
ggkm(fit)
library(survival)
ggkm(fit)
?ggkm
ggkm <- function(sfit, table = TRUE, returns = FALSE,
xlabs = "Time", ylabs = "survival probability",
ystratalabs = NULL, ystrataname = NULL,
timeby = 100, main = "Kaplan-Meier Plot",
pval = TRUE, ...) {
require(ggplot2)
require(survival)
require(gridExtra)
if(is.null(ystratalabs)) {
ystratalabs <- as.character(levels(summary(sfit)$strata))
}
m <- max(nchar(ystratalabs))
if(is.null(ystrataname)) ystrataname <- "Strata"
times <- seq(0, max(sfit$time), by = timeby)
.df <- data.frame(time = sfit$time, n.risk = sfit$n.risk,
n.event = sfit$n.event, surv = sfit$surv, strata = summary(sfit, censored = T)$strata,
upper = sfit$upper, lower = sfit$lower)
levels(.df$strata) <- ystratalabs
zeros <- data.frame(time = 0, surv = 1, strata = factor(ystratalabs, levels=levels(.df$strata)),
upper = 1, lower = 1)
.df <- rbind.fill(zeros, .df)
d <- length(levels(.df$strata))
p <- ggplot(.df, aes(time, surv, groups = strata)) +
geom_step(aes(linetype = strata), size = 0.7) +
theme_bw() +
opts(axis.title.x = theme_text(vjust = 0.5)) +
scale_x_continuous(xlabs, breaks = times, limits = c(0, max(sfit$time))) +
scale_y_continuous(ylabs, limits = c(0, 1)) +
opts(panel.grid.minor = theme_blank()) +
opts(legend.position = c(ifelse(m < 10, .28, .35), ifelse(d < 4, .25, .35))) +
opts(legend.key = theme_rect(colour = NA)) +
labs(linetype = ystrataname) +
opts(plot.margin = unit(c(0, 1, .5, ifelse(m < 10, 1.5, 2.5)), "lines")) +
opts(title = main)
## Create a blank plot for place-holding
## .df <- data.frame()
blank.pic <- ggplot(.df, aes(time, surv)) +
geom_blank() +
theme_bw() +
opts(axis.text.x = theme_blank(), axis.text.y = theme_blank(),
axis.title.x = theme_blank(), axis.title.y = theme_blank(),
axis.ticks = theme_blank(), panel.grid.major = theme_blank(),
panel.border = theme_blank())
if(pval) {
sdiff <- survdiff(eval(sfit$call$formula), data = eval(sfit$call$data))
pval <- pchisq(sdiff$chisq, length(sdiff$n) - 1, lower.tail = FALSE)
pvaltxt <- ifelse(pval < 0.0001, "p < 0.0001", paste("p =", signif(pval, 3)))
p <- p + annotate("text", x = 0.6 * max(sfit$time), y = 0.1, label = pvaltxt)
}
if(table) {
## Create table graphic to include at-risk numbers
risk.data <- data.frame(strata = summary(sfit, times = times, extend = TRUE)$strata,
time = summary(sfit, times = times, extend = TRUE)$time,
n.risk = summary(sfit, times = times, extend = TRUE)$n.risk)
data.table <- ggplot(risk.data, aes(x = time, y = strata, label = format(n.risk, nsmall = 0))) +
#, color = strata)) +
geom_text(size = 3.5) +
theme_bw() +
scale_y_discrete(breaks = as.character(levels(risk.data$strata)), labels = ystratalabs) +
# scale_y_discrete(#format1ter = abbreviate,
# breaks = 1:3,
# labels = ystratalabs) +
scale_x_continuous("Numbers at risk", limits = c(0, max(sfit$time))) +
opts(axis.title.x = theme_text(size = 10, vjust = 1), panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(), panel.border = theme_blank(),
axis.text.x = theme_blank(), axis.ticks = theme_blank(),
axis.text.y = theme_text(face = "bold", hjust = 1))
data.table <- data.table + opts(legend.position = "none") +
xlab(NULL) + ylab(NULL)
data.table <- data.table +
opts(plot.margin = unit(c(-1.5, 1, 0.1, ifelse(m < 10, 2.5, 3.5) - 0.28 * m), "lines"))
## Plotting the graphs
## p <- ggplotGrob(p)
## p <- addGrob(p, textGrob(x = unit(.8, "npc"), y = unit(.25, "npc"), label = pvaltxt,
## gp = gpar(fontsize = 12)))
grid.arrange(p, blank.pic, data.table,
clip = FALSE, nrow = 3, ncol = 1,
heights = unit(c(2, .1, .25),c("null", "null", "null")))
if(returns) {
a <- arrangeGrob(p, blank.pic, data.table, clip = FALSE,
nrow = 3, ncol = 1, heights = unit(c(2, .1, .25),c("null", "null", "null")))
return(a)
}
}
else {
## p <- ggplotGrob(p)
## p <- addGrob(p, textGrob(x = unit(0.5, "npc"), y = unit(0.23, "npc"),
## label = pvaltxt, gp = gpar(fontsize = 12)))
print(p)
if(returns) return(p)
}
}
ggkm(fit)
ggkm(survfit(fit))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ ., data=myeloma)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + HGB:platelet, data=myeloma)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + HGB:platelet + + logBUN:platelet, data=myeloma)
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + HGB:platelet + + logBUN:HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + HGB:platelet + logBUN:HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
fit <- coxph(Surv(time,vstatus) ~ logBUN + HGB:platelet, data=myeloma)
plot(survfit(fit), lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(fit)
print(fit)
print(fit)
summary(fit)
?myeloma
x <- c(4, 13, 3, 6, 4, 3, 1, 1, 10, 6, 6, 20, 3, 15)
x <- c(4, 13, 3, 6, 4, 3, 1, 1, 10, 6, 6, 20, 3, 15)
N <- length(x)
x <- c(4, 13, 3, 6, 4, 3, 1, 1, 10, 6, 6, 20, 3, 15)
library(survival)
data(leukemia)
leukemia
leukemia
str(leukemia)
x.df <- data.frame(time=x,status=x.cencored)
x <- c(4, 13, 3, 6, 4, 3, 1, 1, 10, 6, 6, 20, 3, 15)
x.cencored <- c(1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1)
N <- length(x)
x.df <- data.frame(time=x,status=x.cencored)
x.df
dat<-leukemia[leukemia$x=="Maintained",1:2]
dat
dat[,2]
dat <- data.frame(time=x,status=x.cencored)
survdat <- Surv(time=dat[,1],event=dat[,2])
survdat
fit <- survfit(survdat~1,se=FALSE)
summary(fit)
plot(fit)
fit <- survfit(survdat~1,se=TRUE)
summary(fit)
plot(fit)
fit <- survfit(survdat~1,se=TRUE)
x <- c(4, 13, 3, 6, 4, 3, 1, 1, 10, 6, 6, 20, 3, 15)
x.cencored <- c(1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1)
N <- length(x)
dat <- data.frame(time=x,status=x.cencored)
survdat
dat.fit <- survfit(survdat~1,se=TRUE)
summary(fit)
plot(fit)
summary(dat.fit)
plot(dat.fit)
plot(dat.fit, lty=c(1,3,3), ylab = "Survival Probability", xlab = "Months", bty="L",col = c("blue", "green","red"))
plot(dat.fit, lty=c(1,3,3), ylab = "Survival Probability", xlab = "Weeks", bty="L",col = c("blue", "green","red"))
legend(70,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
plot(dat.fit, lty=c(1,3,3), ylab = "Survival Probability", xlab = "Weeks", bty="L",col = c("blue", "green","red"))
legend(15,0.9,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
plot(dat.fit, lty=c(1,3,3), ylab = "Survival Probability", xlab = "Weeks", bty="L",col = c("blue", "green","red"))
legend(15,1,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
plot(dat.fit, lty=c(1,3,3), ylab = "Survival Probability", xlab = "Weeks", bty="L",col = c("blue", "green","red"))
legend(12,1,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))
summary(dat.fit)
?plot
?plot
summary(dat.fit)
dat.fit$n.event/dat.fit$n.risk
legend(12,1,c("Survival Prediction","Lower","Upper"), lty=c(1,3,3), bty = "n",col = c("blue", "green","red"))n
dat.fit$n.event/dat.fit$n.risk
exp(-dat.fit$n.event/dat.fit$n.risk)
summary(dat.fit)
-dat.fit$n.event/dat.fit$n.risk
1-dat.fit$n.event/dat.fit$n.risk
product(1-dat.fit$n.event/dat.fit$n.risk)
prod(1-dat.fit$n.event/dat.fit$n.risk)
prod(exp(-dat.fit$n.event/dat.fit$n.risk))
plot(1-dat.fit$n.event/dat.fit$n.risk)
points(exp(-dat.fit$n.event/dat.fit$n.risk))
plot(1-dat.fit$n.event/dat.fit$n.risk)
lines(exp(-dat.fit$n.event/dat.fit$n.risk))
cumprod(1-dat.fit$n.event/dat.fit$n.risk)
plot(cumprod(1-dat.fit$n.event/dat.fit$n.risk))
plot(cumprod(1-dat.fit$n.event/dat.fit$n.risk), type='l')
lines(cumprod(exp(-dat.fit$n.event/dat.fit$n.risk)))
plot(cumprod(1-dat.fit$n.event/dat.fit$n.risk), type='l')
lines(cumprod(exp(-dat.fit$n.event/dat.fit$n.risk)), col='red')
stepfun(1:8,cumprod(1-dat.fit$n.event/dat.fit$n.risk))
dat.fit$n.event/dat.fit$n.risk
stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk))
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
lines(stepfun(1:7,cumprod(exp(-dat.fit$n.event/dat.fit$n.risk)), col='red'))
stepfun(1:7,cumprod(exp(-dat.fit$n.event/dat.fit$n.risk))
)
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
lines(stepfun(1:7,cumprod(exp(-dat.fit$n.event/dat.fit$n.risk))), col='red')
dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event)
)
sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event)))
sqrt(sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event))))
exp(-dat.fit$n.event/dat.fit$n.risk)
exp(-dat.fit$n.event/(dat.fit$n.risk^2()))
exp(-dat.fit$n.event/(dat.fit$n.risk^2))
sum(-dat.fit$n.event/(dat.fit$n.risk^2))
plot(cumprod(1-dat.fit$n.event/dat.fit$n.risk), type='l')
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
sqrt(sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event))))
cumprod(1-dat.fit$n.event/dat.fit$n.risk))
cumprod(1-dat.fit$n.event/dat.fit$n.risk)
cumprod(1-dat.fit$n.event/dat.fit$n.risk)
lines(stepfun(1:7,cumprod(exp(-dat.fit$n.event/dat.fit$n.risk))), col='red')
sqrt(sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event))))
sqrt(sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event))))
sum(-dat.fit$n.event/(dat.fit$n.risk^2))
exp(sum(-dat.fit$n.event/(dat.fit$n.risk^2)))
km.se <- sqrt(sum(dat.fit$n.event/(dat.fit$n.risk*(dat.fit$n.risk-dat.fit$n.event))))
na.se <- exp(sum(-dat.fit$n.event/(dat.fit$n.risk^2)))
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
lines(stepfun(1:7,km.se + cumprod(1-dat.fit$n.event/dat.fit$n.risk)), col='black', lty=3)
km.se + cumprod(1-dat.fit$n.event/dat.fit$n.risk))
plot(stepfun(1:7,cumprod(1-dat.fit$n.event/dat.fit$n.risk)))
lines(stepfun(1:7,km.se + cumprod(1-dat.fit$n.event/dat.fit$n.risk)), col='black', lty=3)
km.se + cumprod(1-dat.fit$n.event/dat.fit$n.risk)
?plot
