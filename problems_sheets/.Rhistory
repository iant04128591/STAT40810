#Â Load library for truncated normal
source('~/Documents/git/STAT40810/problems_sheets/problem1.R')
install.packages('truncnorm')
library(truncnorm)
load("length.Rdata")
getwd()
list.files()
source('~/Documents/git/STAT40810/problems_sheets/problem1.R')
source('~/Documents/git/STAT40810/problems_sheets/problem1.R')
source('~/Documents/git/STAT40810/problems_sheets/problem1.R')
rm (list=ls())
dev.list()
dev.off()
dev.list()
dev.on()
source('~/Documents/git/STAT40810/problems_sheets/problem1.R')
time <- c(708,	713,	146,	450,	555,	460,	53,	122,	35,	532,	684,	769,	591,	769,	609,	932,	932,	587,	26,	72,	641,	367)
Status <- c(1,	0,	0,	1,	0,	1,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0)
rm(list=ls())
time <- c(708,	713,	146,	450,	555,	460,	53,	122,	35,	532,	684,	769,	591,	769,	609,	932,	932,	587,	26,	72,	641,	367)
status <- c(1,	0,	0,	1,	0,	1,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0)
df <- data.frame(time=time, status=status)
df
install.packages('asaur')
library(asaur)
library(dplyr)
gastricXelox %>% str
gastricXelox %>% head
colnames(gastricXelox) <- c('timeWeeks','censoringIndicator')
gastricXelox %>% head
library(survival)
data(leukemia)
leukemia
gastricXelox
survdat <- Surv(time=gastricXelox$timeWeeks,event=gastricXelox$censoringIndicator)
survdat
fit1 <- survreg(survdat~1,dist="exponential")
lambda <- 1/exp(fit1$coef)
summary(fit1)
tvec<-seq(0,200,length=201)
plot(tvec,dexp(tvec,lambda),type="l")
fit <- survfit(Surv(gastricXelox$timeWeeks,gastricXelox$censoringIndicator)~1,se=FALSE)
plot(fit)
fit
summary(fit)
fit <- survfit(Surv(gastricXelox$timeWeeks,gastricXelox$censoringIndicator)~1,se=TRUE)
summary(fit)
plot(fit)
predict(fit,90)
df
df[,order('time')]
df
df[,order('time')]
df[order('time')]
df[order_by('time')]
df[sort('time')]
survdat
survdat <- Surv(time=df$time,event=df$status)
survdat
survdat
fit1 <- survreg(survdat~1,dist="exponential")
fit1
summary(fit)
fit1 <- survreg(survdat~1,dist="exponential")
summary(fit1)
plot(fit)
fit <- survfit(Surv(df$time,df$status)~1,se=TRUE)
summary(fit)
plot(fit)
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
x<- rnorm(1000)
plot(x)
x_cum <- cumsum(x)
mean(x[1:200])
mean(x[1:200])
mean(x[201:400])
mean(x[401:600])
mean(x[601:800])
mean(x[801:1000])
sd(x[1:200])
sd(x[201:400])
sd(x[401:600])
sd(x[601:800])
sd(x[801:1000])
x_cum <- cumsum(x)
plot(x_cum)
mean(x_cum[1:200])
mean(x_cum[201:400])
mean(x_cum[401:600])
sd(x_cum[1:200])
sd(x_cum[201:400])
sd(x_cum[401:600])
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
letters
factor(rep(letters[1:4], each = 6))
factor(rep(letters[1:5], each = 200))
length(factor(rep(letters[1:5], each = 200)))
groups <- factor(rep(letters[1:5], each = 200))
bartlett.test(dati, groups)
?bartlett.test
bartlett.test(x, groups)
qchisq(0.950, 4)
fligner.test(x, groups)
fit = lm(formula = x ~ groups)
anova(fit)
?qf
qf(0.950, 995, 4)
bt <- bartlett.test(x, groups)
bt
bt$statistic
bt$parameter
qchisq(0.950, as.double(bt$parameter))
bt$statistic
ifelse(qchisq(0.950, as.double(bt$parameter)) > as.double(bt$statistic) , "homoskedasticity", "hetroskedasticity")
ifelse(qchisq(0.950, as.double(bt$parameter)) > as.double(bt$statistic) , "homoskedasticity variance", "hetroskedasticity variance")
ifelse(qchisq(0.950, as.double(bt$parameter)) > as.double(bt$statistic) , "H0: homoskedasticity variance", "H1: hetroskedasticity variance")
ft <- fligner.test(x, groups)
ft
bt
ft
ft$parameter
ft$statistic
ifelse(qchisq(0.950, as.double(ft$parameter)) > as.double(ft$statistic) , "H0: homoskedasticity variance", "H1: hetroskedasticity variance")
fit = lm(formula = x ~ groups)
anova(fit)
qf(0.950, 995, 4)
fit
anova(fit)
fit.anova <- anova(fit)
fit.anova
fit.anova$Df
fit.anova$Df[1]
fit.anova
fit.anova$`F value`
fit.anova$`F value`[1]
fit.anova$`F value`[2]
fit.anova$`F value`[1]
fit.anova$`Pr(>F)`
ifelse(qf(0.950, fit.anova$Df[2], fit.anova$Df[1]) > fit.anova$`F value`[1] , "H0: homoskedasticity variance", "H1: hetroskedasticity variance")
ifelse(qf(0.950, fit.anova$Df[2], fit.anova$Df[1]) > fit.anova$`F value`[1] , "H0: groups have equal mean", "H1: groups do not have equal mean")
bt <- bartlett.test(x_cum, groups)
ifelse(qchisq(0.950, as.double(bt$parameter)) > as.double(bt$statistic) , "H0: homoskedasticity variance", "H1: hetroskedasticity variance")
bt
ft <- fligner.test(x_cum, groups)
ifelse(qchisq(0.950, as.double(ft$parameter)) > as.double(ft$statistic) , "H0: homoskedasticity variance", "H1: hetroskedasticity variance")
fit = lm(formula = x_cum ~ groups)
fit.anova <- anova(fit)
fit.anova
ifelse(qf(0.950, fit.anova$Df[2], fit.anova$Df[1]) > fit.anova$`F value`[1] , "H0: groups have equal mean", "H1: groups do not have equal mean")
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
plot(x_cum)
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
source('~/Documents/git/STAT40810/problems_sheets/problem3.R')
